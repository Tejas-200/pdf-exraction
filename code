import fitz  # PyMuPDF
import pandas as pd

def categorize_text(text):
    categories = {
        "Introduction": ["introduction", "overview", "abstract"],
        "Conclusion": ["conclusion", "summary", "closing"],
        "Methodology": ["methodology", "methods", "approach"],
        "Results": ["results", "findings", "outcome"],
        "Discussion": ["discussion", "analysis", "interpretation"],
    }
    
    categorized_text = []
    text_lines = text.split('\n')
    
    for line in text_lines:
        line_lower = line.lower()
        assigned = False
        for category, keywords in categories.items():
            if any(keyword in line_lower for keyword in keywords):
                categorized_text.append({"Category": category, "Text": line.strip()})
                assigned = True
                break
        if not assigned:
            categorized_text.append({"Category": "Uncategorized", "Text": line.strip()})
    
    return categorized_text

def extract_text_from_pdf(pdf_path):
    pdf_document = fitz.open(pdf_path)
    text = ""
    
    for page_num in range(pdf_document.page_count):
        page = pdf_document.load_page(page_num)
        page_text = page.get_text("text")
        text += page_text + "\n"
    
    return text

def save_to_csv(categorized_text, output_csv_path):
    df = pd.DataFrame(categorized_text)
    df.to_csv(output_csv_path, index=False, encoding="utf-8")

def main(pdf_path, output_csv_path):
    text = extract_text_from_pdf(pdf_path)
    categorized_text = categorize_text(text)
    save_to_csv(categorized_text, output_csv_path)
    print(f"Text extracted, categorized, and saved to {output_csv_path}")

# Example usage
pdf_path = "sample.pdf"  # Path to your PDF file
output_csv_path = "categorized_text.csv"  # Path to save the categorized text

main(pdf_path, output_csv_path)
